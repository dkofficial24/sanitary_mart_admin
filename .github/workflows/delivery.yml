name: CI

on:
  push:
    branches:
      - main

jobs:
  build_apk:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Node.js installation
        uses: actions/cache@v2
        with:
         path: ~/.npm
         key: ${{ runner.os }}-node-${{ hashFiles('**/*.js', '**/package-lock.json', '**/yarn.lock') }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.0.0'

      - name: Cache Firebase CLI installation
        uses: actions/cache@v2
        with:
          path: ~/.npm-global # npm global package directory
          key: ${{ runner.os }}-firebase-cli-${{ hashFiles('**/package-lock.json') }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          architecture: 'x64'
          cache: 'gradle'

      - name: Cache Flutter SDK installation
        uses: actions/cache@v2
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Install Android Gems
        working-directory: ${{ github.workspace }}/android
        run: bundle install

      - name: Flutter get
        working-directory: ${{ github.workspace }}
        run: flutter pub get

#      - name: Decode Keystore
#        run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > ${{ github.workspace }}/android/app.jks

#      - name: Set up key.properties
#        working-directory: ${{ github.workspace }}
#        run: |
#          echo keyPassword=\${{ secrets.SIGNING_STORE_PASSWORD }} > ${{ env.PROPERTIES_PATH }}
#          echo storePassword=\${{ secrets.SIGNING_KEY_PASSWORD }} >> ${{ env.PROPERTIES_PATH }}
#          echo keyAlias=\${{ secrets.SIGNING_KEY_ALIAS }} >> ${{ env.PROPERTIES_PATH }}
#        env:
#          PROPERTIES_PATH: "${{ github.workspace }}/android/key.properties"

      - name: Build APK
        working-directory: ${{ github.workspace }}
        run: flutter build apk

#      - name: Authenticate Firebase CLI
#        run: firebase login:ci --token '${{ secrets.FIREBASE_TOKEN }}'

      - name: Create Firebase Service Credentials file
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > "${{ github.workspace }}/android/firebase_credentials.json"
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Distribute Android Beta App
        working-directory: ${{ github.workspace }}/android
        run: bundle exec fastlane android deploy_to_firebase
        env:
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
